(undo-tree-save-format-version . 1)
"be86c253c4eff8245d9b83e9706496503cb11151"
[nil nil nil nil (25221 12085 462353 0) 0 nil]
([nil nil ((3762 . 3763) (t 25221 10513 0 0)) nil (25221 12085 462347 0) 0 nil])
([nil nil ((4708 . 4709) (t 25297 60491 866606 900000)) nil (25298 1047 197297 632000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4881 . 4882) (nil fontified nil 4709 . 4882) (4709 . 4882)) nil (25298 1047 197296 18000) 0 nil])
([nil nil ((4882 . 4883)) nil (25298 1047 197292 613000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -1391) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (1393 . 1394) (t 25298 1047 206584 332000)) nil (25298 3102 117305 708000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1391) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . 1) 1392) nil (25298 3102 117300 870000) 0 nil])
([nil nil ((4881 . 4882)) nil (25298 3102 117281 372000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5230 . 5231) (nil fontified nil 4882 . 5231) (4882 . 5231)) nil (25298 3102 117279 326000) 0 nil])
([nil nil ((5231 . 5232)) nil (25298 3102 117274 737000) 0 nil])
([nil nil ((#("(use-package magit
  :custom
  (magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-v1))

;; NOTE: Make sure to configure a GitHub token before using this package!
;; - https://magit.vc/manual/forge/Token-Creation.html#Token-Creation
;; - https://magit.vc/manual/ghub/Getting-Started.html#Getting-Started
(use-package forge)
" 0 1 (fontified t) 1 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 18 (fontified t face font-lock-constant-face) 18 21 (fontified t) 21 28 (fontified t face font-lock-builtin-face) 28 115 (fontified t) 115 118 (fontified t face font-lock-comment-delimiter-face) 118 189 (fontified t face font-lock-comment-face) 189 192 (fontified t face font-lock-comment-delimiter-face) 192 259 (fontified t face font-lock-comment-face) 259 262 (fontified t face font-lock-comment-delimiter-face) 262 330 (fontified t face font-lock-comment-face) 330 331 (fontified t) 331 342 (fontified t face font-lock-keyword-face) 342 343 (fontified t) 343 348 (fontified t face font-lock-constant-face) 348 349 (fontified t rear-nonsticky t) 349 350 (fontified t)) . 4882) (undo-tree-id6 . -19) (undo-tree-id7 . -350) (undo-tree-id8 . -349) (undo-tree-id9 . -349) (undo-tree-id10 . -349) (undo-tree-id11 . -349) (undo-tree-id12 . -350) (undo-tree-id13 . -330) (undo-tree-id14 . -349) (undo-tree-id15 . -350) (undo-tree-id16 . -350) (t 25298 3102 116585 417000)) nil (25298 3114 707248 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4959 . 4960) (nil fontified nil 4882 . 4960) (4882 . 4960) (t 25298 3114 696585 424000)) nil (25298 3128 76400 323000) 0 nil])
([nil nil ((4960 . 4961)) nil (25298 3128 76395 409000) 0 nil])
([nil nil ((4961 . 4962) (t 25298 3128 76585 431000)) nil (25298 3181 592193 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5086 . 5087) (nil fontified nil 4962 . 5087) (4962 . 5087)) nil (25298 3181 592190 297000) 0 nil])
([nil nil ((5087 . 5088)) nil (25298 3181 592184 230000) 0 nil])
([nil nil ((4988 . 4991) (t 25298 3181 586585 459000)) nil (25298 3482 117851 213000) 0 nil])
([nil nil ((4991 . 5000)) nil (25298 3482 117849 368000) 0 nil])
([nil nil ((5031 . 5033) (#("  " 0 2 (fontified nil)) . 5030) (undo-tree-id0 . -2) (5032 . 5033)) nil (25298 3482 117846 752000) 0 nil])
([nil nil ((5030 . 5032)) nil (25298 3482 117830 241000) 0 nil])
([nil nil ((5032 . 5041)) nil (25298 3482 117825 965000) 0 nil])
([nil nil ((#("(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))
" 0 1 (fontified t) 1 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 31 (fontified t face font-lock-constant-face) 31 34 (fontified t) 34 39 (fontified t face font-lock-builtin-face) 39 79 (fontified t)) . 4882) (undo-tree-id3 . -79) (undo-tree-id4 . -79) (undo-tree-id5 . -79) (t 25298 3482 106585 618000)) nil (25298 3726 443734 363000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4881) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 4882) nil (25298 3726 443728 971000) 0 nil])
([nil nil ((5032 . 5034) (t 25298 3726 446585 747000)) nil (25298 4220 351862 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5095 . 5096) (nil fontified nil 5034 . 5096) (5034 . 5096)) nil (25298 4220 351860 587000) 0 nil])
([nil nil ((5096 . 5097)) nil (25298 4220 351856 492000) 0 nil])
([nil nil ((#("t))
" 0 4 (fontified t)) . -5093) (undo-tree-id56 . -4) (undo-tree-id57 . -3) (undo-tree-id58 . -4) (undo-tree-id59 . -3) (undo-tree-id60 . -4) (undo-tree-id61 . -4) 5097 (t 25298 4220 346586 8000)) nil (25298 4292 646741 375000) 0 nil])
([nil nil ((#("dracula " 0 8 (fontified t)) . -5085) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) 5093) nil (25298 4292 646722 339000) 0 nil])
([nil nil ((#("doom-" 0 5 (fontified t)) . -5080) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) 5085) nil (25298 4292 646718 243000) 0 nil])
([nil nil ((#("theme '" 0 7 (fontified t)) . -5073) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) 5080) nil (25298 4292 646713 370000) 0 nil])
([nil nil ((#("load-" 0 5 (fontified t)) . -5068) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) 5073) nil (25298 4292 646707 972000) 0 nil])
([nil nil ((#("init (" 0 4 (fontified t face font-lock-builtin-face) 4 6 (fontified t)) . -5062) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) 5068) nil (25298 4292 646702 418000) 0 nil])
([nil nil ((#("themes
  :" 0 6 (fontified t face font-lock-constant-face) 6 7 (fontified t) 7 9 (fontified t) 9 10 (fontified t)) . -5052) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -9) (undo-tree-id28 . -10) (undo-tree-id29 . -7) (undo-tree-id30 . -10) 5062) nil (25298 4292 646697 58000) 0 nil])
([nil nil ((#("doom-" 0 5 (fontified t face font-lock-constant-face)) . -5047) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) 5052) nil (25298 4292 646687 317000) 0 nil])
([nil nil ((#("package " 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . -5039) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) 5047) nil (25298 4292 646678 190000) 0 nil])
([nil nil ((#("use-" 0 4 (fontified t)) . -5035) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) 5039) nil (25298 4292 646669 235000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5034) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 5035) nil (25298 4292 646650 498000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5033) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 5034 (t 25298 4292 646586 46000)) nil (25298 4326 583371 466000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5032) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 5033 (t 25298 4326 576586 64000)) nil (25298 4347 740136 850000) 0 nil])
([nil nil ((1715 . 1716) (t 25298 4347 736586 75000)) nil (25298 52108 628550 119000) 0 nil])
([nil nil ((1796 . 1797)) nil (25298 52108 628549 122000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1796) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 1797) nil (25298 52108 628546 604000) 0 nil])
([nil nil ((1796 . 1797)) nil (25298 52108 628507 284000) 0 nil])
([nil nil ((1836 . 1837)) nil (25298 52108 628506 450000) 0 nil])
([nil nil ((1876 . 1877)) nil (25298 52108 628505 666000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1908) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#(" " 0 1 (fontified t)) . -1909) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) 1910) nil (25298 52108 628501 47000) 0 nil])
([nil nil ((1908 . 1909)) nil (25298 52108 628404 852000) 0 nil])
([nil nil ((1974 . 1975)) nil (25298 52108 628404 145000) 0 nil])
([nil nil ((2122 . 2123)) nil (25298 52108 628403 419000) 0 nil])
([nil nil ((#("
;(add-hook 'java-mode-hook #'lsp)
;(add-hook 'python-mode-hook #'lsp)" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t) 2 35 (face font-lock-comment-face fontified t) 35 36 (face font-lock-comment-delimiter-face fontified t) 36 70 (face font-lock-comment-face fontified t)) . 2154) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -35) (undo-tree-id281 . -35) (undo-tree-id282 . -35) (undo-tree-id283 . -35) (undo-tree-id284 . -35) (undo-tree-id285 . -35) (undo-tree-id286 . -35) (undo-tree-id287 . -70) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -36) (undo-tree-id303 . -36) (undo-tree-id304 . -36) (undo-tree-id305 . -36) (undo-tree-id306 . -36) (undo-tree-id307 . -36) (undo-tree-id308 . -36) (undo-tree-id309 . -36) (undo-tree-id310 . -36) (undo-tree-id311 . -36) (undo-tree-id312 . -36) (undo-tree-id313 . -36) (undo-tree-id314 . -36) (undo-tree-id315 . -36) (undo-tree-id316 . -36) (undo-tree-id317 . -36) (undo-tree-id318 . -36) (undo-tree-id319 . -36) (undo-tree-id320 . -36) (undo-tree-id321 . -36) (undo-tree-id322 . -36) (undo-tree-id323 . -70) (undo-tree-id324 . -70) (undo-tree-id325 . -70) (undo-tree-id326 . -70) (undo-tree-id327 . -70) (undo-tree-id328 . -70) (undo-tree-id329 . -70) (undo-tree-id330 . -70) (undo-tree-id331 . -70) (undo-tree-id332 . -70) (undo-tree-id333 . -70) (undo-tree-id334 . -70) (undo-tree-id335 . -70) (undo-tree-id336 . -70) (undo-tree-id337 . -70) (undo-tree-id338 . -70) (undo-tree-id339 . -70) (undo-tree-id340 . -70) (undo-tree-id341 . -70) (undo-tree-id342 . -70) (undo-tree-id343 . -70) (undo-tree-id344 . -70) (undo-tree-id345 . -70) (undo-tree-id346 . -34) (undo-tree-id347 . -34) (undo-tree-id348 . -34) (undo-tree-id349 . -34) (undo-tree-id350 . -34) (undo-tree-id351 . -34) (undo-tree-id352 . -34) (undo-tree-id353 . -34) (undo-tree-id354 . -34) (undo-tree-id355 . -34) (undo-tree-id356 . -34) (undo-tree-id357 . -34) (undo-tree-id358 . -34) (undo-tree-id359 . -34) (undo-tree-id360 . -70) (undo-tree-id361 . -70)) nil (25298 52108 628400 525000) 0 nil])
([nil nil ((#("
;(setq lsp-ui-sideline-enable t
;	lsp-ui-sideline-show-symbol t
;	lsp-ui-sideline-show-hover t
;	lsp-ui-sideline-showcode-actions t
;	lsp-ui-sideline-update-mode 'point)" 0 1 (fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t) 2 33 (face font-lock-comment-face fontified t) 33 34 (face font-lock-comment-delimiter-face fontified t) 34 65 (face font-lock-comment-face fontified t) 65 66 (face font-lock-comment-delimiter-face fontified t) 66 96 (face font-lock-comment-face fontified t) 96 97 (face font-lock-comment-delimiter-face fontified t) 97 133 (face font-lock-comment-face fontified t) 133 134 (face font-lock-comment-delimiter-face fontified t) 134 170 (face font-lock-comment-face fontified t)) . 2183) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -33) (undo-tree-id205 . -33) (undo-tree-id206 . -33) (undo-tree-id207 . -33) (undo-tree-id208 . -33) (undo-tree-id209 . -33) (undo-tree-id210 . -33) (undo-tree-id211 . -65) (undo-tree-id212 . -65) (undo-tree-id213 . -65) (undo-tree-id214 . -65) (undo-tree-id215 . -65) (undo-tree-id216 . -65) (undo-tree-id217 . -65) (undo-tree-id218 . -96) (undo-tree-id219 . -96) (undo-tree-id220 . -96) (undo-tree-id221 . -96) (undo-tree-id222 . -96) (undo-tree-id223 . -96) (undo-tree-id224 . -96) (undo-tree-id225 . -133) (undo-tree-id226 . -133) (undo-tree-id227 . -133) (undo-tree-id228 . -133) (undo-tree-id229 . -133) (undo-tree-id230 . -133) (undo-tree-id231 . -133) (undo-tree-id232 . -170) (undo-tree-id233 . -170) (undo-tree-id234 . -170) (undo-tree-id235 . -170) (undo-tree-id236 . -170) (undo-tree-id237 . -170) (undo-tree-id238 . -170) (undo-tree-id239 . -170) (undo-tree-id240 . -170) (undo-tree-id241 . -170) (undo-tree-id242 . -170) (undo-tree-id243 . -170) (undo-tree-id244 . -170) (undo-tree-id245 . -170) (undo-tree-id246 . -170) (undo-tree-id247 . -170) (undo-tree-id248 . -170) (undo-tree-id249 . -132) (undo-tree-id250 . -132) (undo-tree-id251 . -132) (undo-tree-id252 . -132) (undo-tree-id253 . -132) (undo-tree-id254 . -132) (undo-tree-id255 . -132) (undo-tree-id256 . -64) (undo-tree-id257 . -64) (undo-tree-id258 . -64) (undo-tree-id259 . -64) (undo-tree-id260 . -64) (undo-tree-id261 . -64) (undo-tree-id262 . -64) (undo-tree-id263 . -32) (undo-tree-id264 . -32) (undo-tree-id265 . -32) (undo-tree-id266 . -32) (undo-tree-id267 . -32) (undo-tree-id268 . -32) (undo-tree-id269 . -32) (undo-tree-id270 . -170) (undo-tree-id271 . -170)) nil (25298 52108 628329 932000) 0 nil])
([nil nil ((2668 . 2669)) nil (25298 52108 628277 16000) 0 nil])
([nil nil ((#("python-mode" 0 11 (fontified t)) . 3041) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -11) (undo-tree-id132 . -11) (undo-tree-id133 . -11) (undo-tree-id134 . -11) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -10) (undo-tree-id139 . -10) (undo-tree-id140 . -10) (undo-tree-id141 . -10) (undo-tree-id142 . -10) (undo-tree-id143 . -10) (undo-tree-id144 . -10) (undo-tree-id145 . -9) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -11) (undo-tree-id195 . -11)) nil (25298 52108 628273 561000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -3040) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 3041) nil (25298 52108 628218 14000) 0 nil])
nil
